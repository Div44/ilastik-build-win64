@echo off
set PATH=${MINGW_PATH};${ILASTIK_DEPENDENCY_DIR}/bin;%PATH%

rem find libgcc*.dll
for /f "delims=" %%a in ('dir /b "${ILASTIK_DEPENDENCY_DIR_DOS}\bin\libgcc*.dll"') do @set LIBGCC=%%a
set LIBGCC=%LIBGCC:.dll=%

rem find libgcc.a and copy it to ilastik libdir (needed to get __chkstk_ms() )
for /f "delims=" %%a in ('dir /s /b "${MINGW_PATH}\..\lib\*libgcc.a" ^| find /v "\32\"') do @set LIBGCCA=%%a
copy "%LIBGCCA%" ${ILASTIK_DEPENDENCY_DIR_DOS}\lib\libgcc.lib

if "${ILASTIK_BITNESS}" == "64" (
    rem emulate missing C99 functions
    cl /MD /O2 /c ${PROJECT_SOURCE_DIR}/c99.c
    lib /NOLOGO ${SCIPY_MACHINE} /OUT:${ILASTIK_DEPENDENCY_DIR}/lib/emulate_c99.lib c99.obj

    ${PYTHON_EXE} setup.py build_ext -l "%LIBGCC% libgfortran-3 emulate_c99 libgcc" -L ${ILASTIK_DEPENDENCY_DIR}/lib install
) else (
    rem 32-bit mingw already contains the C99 functions. libgcc and libgfortran are
    rem automatically included by numpy/distutils on this platform.
    ${PYTHON_EXE} setup.py build_ext -l "libgcc" -L ${ILASTIK_DEPENDENCY_DIR}/lib install
)

rem Do not build with '-c mingw32' because this would use gcc for linking, leading to crashes.
rem For the same reason, never start 'devenv' in a git/msys bash shell!
rem Without this flag, mingw will only be used for Fortran sources, and gfortran 
rem is automatically found in the PATH.
